# –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
const DEFAULT_PORT = 9050
var multiplayer_peer: MultiplayerPeer
var current_server_info: Dictionary

# –ó–∞–º–µ–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é _on_create_server_pressed –Ω–∞ —ç—Ç—É:
func _on_create_server_pressed():
    var server_name = server_name_edit.text.strip_edges()
    
    if server_name.length() < 3:
        status_label.text = "–ò–º—è —Å–µ—Ä–≤–µ—Ä–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ (–º–∏–Ω–∏–º—É–º 3 —Å–∏–º–≤–æ–ª–∞)"
        status_label.modulate = Color.RED
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å–µ—Ä–≤–µ—Ä–∞
    current_server_info = {
        "name": server_name,
        "map": available_maps[map_option.selected],
        "mode": available_modes[mode_option.selected],
        "max_players": int(player_limit_slider.value),
        "port": DEFAULT_PORT,
        "password": "",
        "players": [player_data["player_id"]],  # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
        "is_vip": player_data["is_vip"]
    }
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
    _create_network_server()

func _create_network_server():
    status_label.text = "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞..."
    status_label.modulate = Color.YELLOW
    
    multiplayer_peer = ENetMultiplayerPeer.new()
    var error = multiplayer_peer.create_server(current_server_info["port"], current_server_info["max_players"])
    
    if error != OK:
        status_label.text = "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ (–∫–æ–¥ %d)" % error
        status_label.modulate = Color.RED
        return
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º multiplayer
    multiplayer.multiplayer_peer = multiplayer_peer
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã
    multiplayer.peer_connected.connect(_on_player_connected)
    multiplayer.peer_disconnected.connect(_on_player_disconnected)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä –≤ —Å–ø–∏—Å–æ–∫
    server_list_data.append(current_server_info)
    _refresh_server_list()
    
    status_label.text = "–°–µ—Ä–≤–µ—Ä '%s' —Å–æ–∑–¥–∞–Ω!" % current_server_info["name"]
    status_label.modulate = Color.GREEN
    tabs.current_tab = 0  # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤

func _on_player_connected(id: int):
    print("–ò–≥—Ä–æ–∫ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è: ", id)
    current_server_info["players"].append(id)
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫—É –¥–∞–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞

func _on_player_disconnected(id: int):
    print("–ò–≥—Ä–æ–∫ –æ—Ç–∫–ª—é—á–∏–ª—Å—è: ", id)
    current_server_info["players"].erase(id)

func _refresh_server_list():
    # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
    for child in server_list.get_children():
        child.queue_free()
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Å–ø–∏—Å–æ–∫
    for server in server_list_data:
        var server_button = Button.new()
        server_button.text = _format_server_info(server)
        server_button.custom_minimum_size = Vector2(0, 60)
        server_button.align = Label.ALIGN_LEFT
        server_button.pressed.connect(_on_server_selected.bind(server))
        server_list.add_child(server_button)

func _format_server_info(server: Dictionary) -> String:
    var password_icon = "üîí" if server["has_password"] else ""
    var vip_icon = "‚≠ê" if server.get("is_vip", false) else ""
    return "%s %s %s\n–ö–∞—Ä—Ç–∞: %s | –†–µ–∂–∏–º: %s | –ò–≥—Ä–æ–∫–∏: %d/%d" % [
        server["name"],
        vip_icon,
        password_icon,
        server["map"].capitalize(),
        server["mode"],
        server["players"].size(),
        server["max_players"]
    ]
